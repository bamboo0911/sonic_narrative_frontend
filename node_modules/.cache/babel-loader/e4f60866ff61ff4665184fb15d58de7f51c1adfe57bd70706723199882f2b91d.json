{"ast":null,"code":"var _jsxFileName = \"/home/bamboo0911/my-pwa-app/frontend/src/components/AIResultPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIResultPage = () => {\n  _s();\n  const [generatedText, setGeneratedText] = useState('');\n  const [displayedText, setDisplayedText] = useState('');\n  useEffect(() => {\n    const fetchGeneratedText = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/latest-result'); // 确保路径正确\n        if (!response.ok) {\n          throw new Error(`Network response was not ok: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setGeneratedText(data.generatedText);\n      } catch (error) {\n        console.error('Error fetching the generated text:', error);\n        setGeneratedText('Error: Could not load AI generated text.');\n      }\n    };\n    fetchGeneratedText();\n  }, []);\n  useEffect(() => {\n    if (generatedText) {\n      let index = 0;\n      const interval = setInterval(() => {\n        setDisplayedText(prev => prev + generatedText[index]);\n        index++;\n        if (index >= generatedText.length) clearInterval(interval);\n      }, 50); // 每个字的显示间隔\n\n      return () => clearInterval(interval);\n    }\n  }, [generatedText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Generated Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: displayedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(AIResultPage, \"zBBsd7NZZGaRBJ8QzArFPJ5Tsn4=\");\n_c = AIResultPage;\nexport default AIResultPage;\nvar _c;\n$RefreshReg$(_c, \"AIResultPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AIResultPage","_s","generatedText","setGeneratedText","displayedText","setDisplayedText","fetchGeneratedText","response","fetch","ok","Error","statusText","data","json","error","console","index","interval","setInterval","prev","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bamboo0911/my-pwa-app/frontend/src/components/AIResultPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst AIResultPage = () => {\r\n    const [generatedText, setGeneratedText] = useState('');\r\n    const [displayedText, setDisplayedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchGeneratedText = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/latest-result'); // 确保路径正确\r\n                if (!response.ok) {\r\n                    throw new Error(`Network response was not ok: ${response.statusText}`);\r\n                }\r\n                const data = await response.json();\r\n                setGeneratedText(data.generatedText);\r\n            } catch (error) {\r\n                console.error('Error fetching the generated text:', error);\r\n                setGeneratedText('Error: Could not load AI generated text.');\r\n            }\r\n        };\r\n    \r\n        fetchGeneratedText();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (generatedText) {\r\n            let index = 0;\r\n            const interval = setInterval(() => {\r\n                setDisplayedText((prev) => prev + generatedText[index]);\r\n                index++;\r\n                if (index >= generatedText.length) clearInterval(interval);\r\n            }, 50); // 每个字的显示间隔\r\n\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [generatedText]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>AI Generated Content</h1>\r\n            <p>{displayedText}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AIResultPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC,CAAC,CAAC;QACzE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,gCAAgCH,QAAQ,CAACI,UAAU,EAAE,CAAC;QAC1E;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCV,gBAAgB,CAACS,IAAI,CAACV,aAAa,CAAC;MACxC,CAAC,CAAC,OAAOY,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1DX,gBAAgB,CAAC,0CAA0C,CAAC;MAChE;IACJ,CAAC;IAEDG,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EACNV,SAAS,CAAC,MAAM;IACZ,IAAIM,aAAa,EAAE;MACf,IAAIc,KAAK,GAAG,CAAC;MACb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC/Bb,gBAAgB,CAAEc,IAAI,IAAKA,IAAI,GAAGjB,aAAa,CAACc,KAAK,CAAC,CAAC;QACvDA,KAAK,EAAE;QACP,IAAIA,KAAK,IAAId,aAAa,CAACkB,MAAM,EAAEC,aAAa,CAACJ,QAAQ,CAAC;MAC9D,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;MAER,OAAO,MAAMI,aAAa,CAACJ,QAAQ,CAAC;IACxC;EACJ,CAAC,EAAE,CAACf,aAAa,CAAC,CAAC;EAEnB,oBACIH,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBxB,OAAA;MAAAwB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B5B,OAAA;MAAAwB,QAAA,EAAInB;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAxCID,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}