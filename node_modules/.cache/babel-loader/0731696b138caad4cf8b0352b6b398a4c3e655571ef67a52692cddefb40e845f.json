{"ast":null,"code":"// src/serviceWorkerRegistration.js\n// 這段可選的代碼用於註冊 service worker。\n// 預設情況下不會自動呼叫 register()。\n// 這將使應用程式在之後的訪問中加載更快，並且具有離線功能。\n// 然而，這也意味著開發者（以及使用者）只有在關閉所有已打開的頁面後，\n// 才能看到已部署的更新，因為先前緩存的資源會在背景中更新。\n// 想了解此模式的更多好處和如何選擇加入，請參閱 https://bit.ly/CRA-PWA\nconst isLocalhost=Boolean(window.location.hostname==='localhost'||// [::1] 是 IPv6 本地主機地址。\nwindow.location.hostname==='[::1]'||// 127.0.0.0/8 被認為是 IPv4 的本地主機。\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}$/));// 用於註冊 service worker 的函數\nexport function register(config){// 僅在生產環境中註冊 service worker\nif(process.env.NODE_ENV==='production'&&'serviceWorker'in navigator){// 使用 PUBLIC_URL 環境變數創建一個 URL 物件\nconst publicUrl=new URL(process.env.PUBLIC_URL,window.location.href);// 如果 service worker 的 URL 與應用程式的來源不同，則退出函數\nif(publicUrl.origin!==window.location.origin){return;}// 在頁面加載後註冊 service worker\nwindow.addEventListener('load',()=>{const swUrl=`${process.env.PUBLIC_URL}/service-worker.js`;if(isLocalhost){// 如果正在本地運行，檢查是否仍有 service worker 存在\ncheckValidServiceWorker(swUrl,config);// 當在本地運行時，為開發者提供有用的日誌資訊\nnavigator.serviceWorker.ready.then(()=>{console.log('這個網頁應用程式正由 service worker 提供緩存優先的服務。'+'如需了解更多資訊，請參閱 https://bit.ly/CRA-PWA');});}else{// 如果不是本地主機，則直接註冊 service worker\nregisterValidSW(swUrl,config);}});}}// 註冊有效的 service worker 的函數\nfunction registerValidSW(swUrl,config){navigator.serviceWorker.register(swUrl).then(registration=>{registration.onupdatefound=()=>{const installingWorker=registration.installing;if(installingWorker==null){return;}installingWorker.onstatechange=()=>{if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){// 新內容已可用；在關閉所有頁籤後將被使用\nconsole.log('新內容已可用，當所有該頁面的頁籤被關閉後將被使用。詳情參閱 https://bit.ly/CRA-PWA.');// 如果提供了更新回調函數，則執行\nif(config&&config.onUpdate){config.onUpdate(registration);}}else{// 所有內容已被緩存以供離線使用\nconsole.log('內容已被緩存以供離線使用。');// 如果提供了成功回調函數，則執行\nif(config&&config.onSuccess){config.onSuccess(registration);}}}};};}).catch(error=>{console.error('註冊 service worker 時出錯:',error);});}// 檢查是否存在有效的 service worker 的函數\nfunction checkValidServiceWorker(swUrl,config){// 檢查是否可以找到 service worker。如果找不到，重新加載頁面。\nfetch(swUrl,{headers:{'Service-Worker':'script'}}).then(response=>{// 確保 service worker 存在，並且我們獲取到的確實是 JS 文件。\nconst contentType=response.headers.get('content-type');if(response.status===404||contentType!=null&&contentType.indexOf('javascript')===-1){// 沒有找到 service worker。可能是不同的應用程式。重新加載頁面。\nnavigator.serviceWorker.ready.then(registration=>{registration.unregister().then(()=>{window.location.reload();});});}else{// 找到 service worker，正常繼續註冊。\nregisterValidSW(swUrl,config);}}).catch(()=>{console.log('未發現網路連線。應用程式正在離線模式下運行。');});}// 用於註銷 service worker 的函數\nexport function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(registration=>{registration.unregister();}).catch(error=>{console.error(error.message);});}}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","process","env","NODE_ENV","navigator","publicUrl","URL","PUBLIC_URL","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","message"],"sources":["/home/bamboo0911/my-pwa-app/frontend/src/serviceWorkerRegistration.js"],"sourcesContent":["// src/serviceWorkerRegistration.js\r\n\r\n// 這段可選的代碼用於註冊 service worker。\r\n// 預設情況下不會自動呼叫 register()。\r\n\r\n// 這將使應用程式在之後的訪問中加載更快，並且具有離線功能。\r\n// 然而，這也意味著開發者（以及使用者）只有在關閉所有已打開的頁面後，\r\n// 才能看到已部署的更新，因為先前緩存的資源會在背景中更新。\r\n\r\n// 想了解此模式的更多好處和如何選擇加入，請參閱 https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] 是 IPv6 本地主機地址。\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 被認為是 IPv4 的本地主機。\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])){3}$/\r\n    )\r\n);\r\n\r\n// 用於註冊 service worker 的函數\r\nexport function register(config) {\r\n  // 僅在生產環境中註冊 service worker\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // 使用 PUBLIC_URL 環境變數創建一個 URL 物件\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\r\n    // 如果 service worker 的 URL 與應用程式的來源不同，則退出函數\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    // 在頁面加載後註冊 service worker\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // 如果正在本地運行，檢查是否仍有 service worker 存在\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // 當在本地運行時，為開發者提供有用的日誌資訊\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            '這個網頁應用程式正由 service worker 提供緩存優先的服務。' +\r\n              '如需了解更多資訊，請參閱 https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // 如果不是本地主機，則直接註冊 service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// 註冊有效的 service worker 的函數\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // 新內容已可用；在關閉所有頁籤後將被使用\r\n              console.log(\r\n                '新內容已可用，當所有該頁面的頁籤被關閉後將被使用。詳情參閱 https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // 如果提供了更新回調函數，則執行\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // 所有內容已被緩存以供離線使用\r\n              console.log('內容已被緩存以供離線使用。');\r\n\r\n              // 如果提供了成功回調函數，則執行\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('註冊 service worker 時出錯:', error);\r\n    });\r\n}\r\n\r\n// 檢查是否存在有效的 service worker 的函數\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // 檢查是否可以找到 service worker。如果找不到，重新加載頁面。\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // 確保 service worker 存在，並且我們獲取到的確實是 JS 文件。\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // 沒有找到 service worker。可能是不同的應用程式。重新加載頁面。\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // 找到 service worker，正常繼續註冊。\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('未發現網路連線。應用程式正在離線模式下運行。');\r\n    });\r\n}\r\n\r\n// 用於註銷 service worker 的函數\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}