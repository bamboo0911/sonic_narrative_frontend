{"ast":null,"code":"import React,{useState,useRef}from'react';import'.././App.css';// 確保引入了App.css\n// 定義RecordingPage組件\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RecordingPage=()=>{const[isRecording,setIsRecording]=useState(false);// 用來指示是否正在錄音\nconst[audioURL,setAudioURL]=useState('');// 用來存儲錄音完成後的音頻URL\nconst[timeLeft,setTimeLeft]=useState(30);// 用來控制錄音的倒數計時，初始化為30秒\nconst mediaRecorderRef=useRef(null);// 用於存放MediaRecorder對象的引用\nconst timeoutRef=useRef(null);// 用於存放錄音時間限制的計時器引用\nconst intervalRef=useRef(null);// 用於存放倒數計時的計時器引用\n// 開始錄音功能\nconst startRecording=()=>{setIsRecording(true);// 將錄音狀態設置為true，表示開始錄音\nsetTimeLeft(30);// 重置倒數計時為30秒\n// 請求用戶的音頻媒體（麥克風）\nnavigator.mediaDevices.getUserMedia({audio:true}).then(stream=>{// 創建一個MediaRecorder對象來記錄音頻\nmediaRecorderRef.current=new MediaRecorder(stream);mediaRecorderRef.current.start();// 開始錄音\nconst audioChunks=[];// 用來存放錄音片段的數組\n// 當有音頻數據可用時，將其加入到audioChunks數組中\nmediaRecorderRef.current.addEventListener(\"dataavailable\",event=>{audioChunks.push(event.data);});// 當錄音停止時，將錄音片段合併為一個Blob，並生成URL\nmediaRecorderRef.current.addEventListener(\"stop\",()=>{const audioBlob=new Blob(audioChunks);// 創建音頻Blob\nconst audioUrl=URL.createObjectURL(audioBlob);// 為Blob生成URL\nsetAudioURL(audioUrl);// 將生成的URL保存到狀態中\n});// 設置一個計時器，30秒後自動停止錄音\ntimeoutRef.current=setTimeout(()=>{stopRecording();// 調用stopRecording函數來停止錄音\n},30000);// 30000毫秒 = 30秒\n}).catch(error=>{if(error.name==='NotAllowedError'||error.name==='PermissionDeniedError'){alert('Please allow microphone access to use the recording feature.');}else{console.error('Error accessing microphone: ',error);}});// 每秒更新一次倒數計時\nintervalRef.current=setInterval(()=>{setTimeLeft(prev=>{if(prev>1){return prev-1;// 每次減少1秒\n}else{clearInterval(intervalRef.current);// 如果計時器結束，清除計時器\nreturn 0;// 計時器歸零\n}});},1000);// 每1000毫秒 = 1秒\n};// 停止錄音功能\nconst stopRecording=()=>{setIsRecording(false);// 將錄音狀態設置為false，表示停止錄音\nif(mediaRecorderRef.current&&mediaRecorderRef.current.state!==\"inactive\"){mediaRecorderRef.current.stop();// 停止錄音\n}clearTimeout(timeoutRef.current);// 清除時間限制計時器\nclearInterval(intervalRef.current);// 清除倒數計時計時器\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Recording Page\"}),isRecording&&/*#__PURE__*/_jsxs(\"div\",{style:{color:'red',fontWeight:'bold'},children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:'10px',animation:'blink 1s infinite'},children:\"\\u25CF \"}),\"Recording... \",timeLeft,\" seconds left \"]}),/*#__PURE__*/_jsx(\"button\",{onClick:startRecording,disabled:isRecording,children:\"Start Recording\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stopRecording,disabled:!isRecording,children:\"Stop Recording\"}),audioURL&&/*#__PURE__*/_jsx(\"audio\",{src:audioURL,controls:true}),audioURL&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'20px'},children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>alert(\"Send button clicked! (functionality pending)\"),disabled:isRecording,children:\"Send\"})}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'20px'},children:/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:/*#__PURE__*/_jsx(\"button\",{children:\"Back to Main Page\"})})})]});};// 添加CSS動畫，用於實現紅色圓點的閃爍效果\nconst style=document.createElement('style');style.type='text/css';style.innerHTML=`\n  @keyframes blink {\n    0% { opacity: 1; }\n    50% { opacity: 0; }\n    100% { opacity: 1; }\n  }\n`;document.getElementsByTagName('head')[0].appendChild(style);export default RecordingPage;","map":{"version":3,"names":["React","useState","useRef","jsx","_jsx","jsxs","_jsxs","RecordingPage","isRecording","setIsRecording","audioURL","setAudioURL","timeLeft","setTimeLeft","mediaRecorderRef","timeoutRef","intervalRef","startRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","current","MediaRecorder","start","audioChunks","addEventListener","event","push","data","audioBlob","Blob","audioUrl","URL","createObjectURL","setTimeout","stopRecording","catch","error","name","alert","console","setInterval","prev","clearInterval","state","stop","clearTimeout","children","style","color","fontWeight","marginRight","animation","onClick","disabled","src","controls","marginTop","href","document","createElement","type","innerHTML","getElementsByTagName","appendChild"],"sources":["/home/bamboo0911/my-pwa-app/frontend/src/components/RecordingPage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport '.././App.css';  // 確保引入了App.css\r\n\r\n// 定義RecordingPage組件\r\nconst RecordingPage = () => {\r\n  const [isRecording, setIsRecording] = useState(false); // 用來指示是否正在錄音\r\n  const [audioURL, setAudioURL] = useState(''); // 用來存儲錄音完成後的音頻URL\r\n  const [timeLeft, setTimeLeft] = useState(30); // 用來控制錄音的倒數計時，初始化為30秒\r\n  const mediaRecorderRef = useRef(null); // 用於存放MediaRecorder對象的引用\r\n  const timeoutRef = useRef(null); // 用於存放錄音時間限制的計時器引用\r\n  const intervalRef = useRef(null); // 用於存放倒數計時的計時器引用\r\n\r\n  // 開始錄音功能\r\n  const startRecording = () => {\r\n    setIsRecording(true); // 將錄音狀態設置為true，表示開始錄音\r\n    setTimeLeft(30); // 重置倒數計時為30秒\r\n    \r\n    // 請求用戶的音頻媒體（麥克風）\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        // 創建一個MediaRecorder對象來記錄音頻\r\n        mediaRecorderRef.current = new MediaRecorder(stream);\r\n        mediaRecorderRef.current.start(); // 開始錄音\r\n        const audioChunks = []; // 用來存放錄音片段的數組\r\n\r\n        // 當有音頻數據可用時，將其加入到audioChunks數組中\r\n        mediaRecorderRef.current.addEventListener(\"dataavailable\", event => {\r\n          audioChunks.push(event.data);\r\n        });\r\n\r\n        // 當錄音停止時，將錄音片段合併為一個Blob，並生成URL\r\n        mediaRecorderRef.current.addEventListener(\"stop\", () => {\r\n          const audioBlob = new Blob(audioChunks); // 創建音頻Blob\r\n          const audioUrl = URL.createObjectURL(audioBlob); // 為Blob生成URL\r\n          setAudioURL(audioUrl); // 將生成的URL保存到狀態中\r\n        });\r\n\r\n        // 設置一個計時器，30秒後自動停止錄音\r\n        timeoutRef.current = setTimeout(() => {\r\n          stopRecording(); // 調用stopRecording函數來停止錄音\r\n        }, 30000); // 30000毫秒 = 30秒\r\n      })\r\n      .catch(error => {\r\n        if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\r\n          alert('Please allow microphone access to use the recording feature.');\r\n        } else {\r\n          console.error('Error accessing microphone: ', error);\r\n        }\r\n      });\r\n\r\n    // 每秒更新一次倒數計時\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft(prev => {\r\n        if (prev > 1) {\r\n          return prev - 1; // 每次減少1秒\r\n        } else {\r\n          clearInterval(intervalRef.current); // 如果計時器結束，清除計時器\r\n          return 0; // 計時器歸零\r\n        }\r\n      });\r\n    }, 1000); // 每1000毫秒 = 1秒\r\n  };\r\n\r\n  // 停止錄音功能\r\n  const stopRecording = () => {\r\n    setIsRecording(false); // 將錄音狀態設置為false，表示停止錄音\r\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\r\n      mediaRecorderRef.current.stop(); // 停止錄音\r\n    }\r\n    clearTimeout(timeoutRef.current); // 清除時間限制計時器\r\n    clearInterval(intervalRef.current); // 清除倒數計時計時器\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Recording Page</h1>\r\n\r\n      {/* 錄音狀態指示，當錄音中時顯示紅色圓點和倒數計時 */}\r\n      {isRecording && (\r\n        <div style={{ color: 'red', fontWeight: 'bold' }}>\r\n          <span style={{ marginRight: '10px', animation: 'blink 1s infinite' }}>\r\n            ● {/* 紅色圓點，使用CSS動畫來實現閃爍效果 */}\r\n          </span>\r\n          Recording... {timeLeft} seconds left {/* 顯示剩餘錄音時間 */}\r\n        </div>\r\n      )}\r\n\r\n      {/* 錄音控制按鈕 */}\r\n      <button onClick={startRecording} disabled={isRecording}>Start Recording</button>\r\n      {/* 當錄音中時，禁用開始按鈕 */}\r\n      <button onClick={stopRecording} disabled={!isRecording}>Stop Recording</button>\r\n      {/* 當未錄音時，禁用停止按鈕 */}\r\n\r\n      {/* 錄音完成後的音頻回放 */}\r\n      {audioURL && <audio src={audioURL} controls />}\r\n      {/* 當有音頻URL時顯示音頻播放器 */}\r\n\r\n      {/* Send 按鈕 */}\r\n      {audioURL && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <button onClick={() => alert(\"Send button clicked! (functionality pending)\")} disabled={isRecording}>\r\n            Send\r\n          </button>\r\n          {/* 當有音頻URL且未錄音時顯示Send按鈕，目前按鈕的功能是顯示一個提示框 */}\r\n        </div>\r\n      )}\r\n\r\n      {/* 返回主頁按鈕 */}\r\n      <div style={{ marginTop: '20px' }}>\r\n        <a href=\"/\">\r\n          <button>Back to Main Page</button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 添加CSS動畫，用於實現紅色圓點的閃爍效果\r\nconst style = document.createElement('style');\r\nstyle.type = 'text/css';\r\nstyle.innerHTML = `\r\n  @keyframes blink {\r\n    0% { opacity: 1; }\r\n    50% { opacity: 0; }\r\n    100% { opacity: 1; }\r\n  }\r\n`;\r\ndocument.getElementsByTagName('head')[0].appendChild(style);\r\n\r\nexport default RecordingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}